{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "apiProfile": "2018-03-01-hybrid",
  "parameters": {
    "boshstorageaccountname": {
      "type": "string",
      "defaultValue": "boshstorageaccount",
      "metadata": {
        "description": "Name of storage account for bosh jobs"
      }
    },
    "OpsManImageURI": {
      "type": "string",
      "defaultValue": "https://opsmanagerwesteurope.blob.core.windows.net/images/ops-manager-2.3-build.250.vhd",
      "metadata": {
        "description": "Uri of the Operations Manager VHD"
      }
    },
    "pcflbConnection": {
      "type": "string",
      "defaultValue": "private",
      "allowedValues": [
        "private",
        "public"
      ],
      "metadata": {
        "description": "Use managed disks, otherwise, storageaccounts will be created"
      }
    },
    "useManagedDisks": {
      "type": "string",
      "defaultValue": "no",
      "allowedValues": [
        "yes",
        "no"
      ],
      "metadata": {
        "description": "Use managed disks, otherwise, storageaccounts will be created"
      }
    },
    "Environment": {
      "type": "string",
      "defaultValue": "AzureStack",
      "allowedValues": [
        "AzureStack",
        "AzureCloud"
      ],
      "metadata": {
        "description": "Use managed disks, otherwise, storageaccounts will be created"
      }
    },
    "opsManFQDNPrefix": {
      "type": "string",
      "defaultValue": "pcfopsman",
      "metadata": {
        "description": "Domain prefix for opsman."
      }
    },
    "opsManVHD": {
      "type": "string",
      "metadata": {
        "description": "Opsman VHD Name"
      }
    },
    "mask": {
      "type": "string",
      "defaultValue": "10.0",
      "metadata": {
        "description": "Opsman VHD Name"
      }
    },
    "deploymentcolor": {
      "type": "string",
      "defaultValue": "green",
      "metadata": {
        "description": "select the opsman deployment color"
      }
    },
    "vmSize": {
      "type": "string",
      "defaultValue": "Standard_F4s_v2",
      "allowedValues": [
        "Standard_F4s_v2",
        "Standard_DS2_v2"
      ],
      "metadata": {
        "description": "Size of vm"
      }
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "ubuntu",
      "metadata": {
        "description": "User name for the Virtual Machine."
      }
    },
    "sshKeyData": {
      "type": "securestring",
      "metadata": {
        "description": "Password for admin user."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "local",
      "metadata": {
        "description": "location where you want to deploy resources"
      }
    },
    "dnsZoneName": {
      "type": "string",
      "defaultValue": "pcfpas.local.azurestack.external",
      "metadata": {
        "description": "The name of the DNS zone."
      }
    }
  },
  "variables": {
    "mysqlStorageAccountName": "[concat('mysqlstrg',uniquestring(resourceGroup().id, deployment().name))]",
    "boshExtraStorageAccountName": "[concat('xtrastrg',uniquestring(resourceGroup().id, deployment().name))]",
    "opsManVMName": "[parameters('opsManFQDNPrefix')]",
    "location": "[parameters('location')]",
    "virtualNetworkName": "[concat(resourceGroup().name,'-virtual-network')]",
    "pas_subnet_name": "[concat(resourceGroup().name,'-pas-subnet')]",
    "services_subnet_name": "[concat(resourceGroup().name,'-services-subnet')]",
    "infrastructure_subnet_name": "[concat(resourceGroup().name,'-infrastructure-subnet')]",
    "internallb_subnet_name": "[concat(resourceGroup().name,'-lb-subnet')]",
    "sshKeyPath": "[concat('/home/',parameters('adminUsername'),'/.ssh/authorized_keys')]",
    "opsManNicName": "[concat('OPSMANNIC_',parameters('deploymentcolor'))]",
    "addressSpace": "[concat(parameters('mask'),'.0.0/16')]",
    "infrastructureaddressPrefix": "[concat(parameters('mask'),'.8.0/26')]",
    "internallbaddressPrefix": "[concat(parameters('mask'),'.8.64/28')]",
    "internallb_subnetID": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), variables('internallb_subnet_name'))]",
    "servicesaddressPrefix": "[concat(parameters('mask'),'.4.0/22')]",
    "pasaddressPrefix": "[concat(parameters('mask'),'.0.0/22')]",
    "OpsManGreenIP": "[concat(parameters('mask'),'.8.4')]",
    "OpsManBlueIP": "[concat(parameters('mask'),'.8.5')]",
    "opsManPrivateIPAddress": "[if(equals(parameters('deploymentcolor'),'green'), variables('OpsManGreenIP'), variables('OpsManBlueIP'))]",
    "pcflbName": "[concat(resourceGroup().name,'-web-lb')]",
    "pcflbID": "[resourceId('Microsoft.Network/loadBalancers',variables('pcflbName'))]",
    "pcffrontEndIPConfigID": "[concat(variables('pcflbID'),'/frontendIPConfigurations/pcf-fe-ip')]",
    "pcflbPoolID": "[concat(variables('pcflbID'),'/backendAddressPools/pcf-backend-pool')]",
    "pcflbProbeID80": "[concat(variables('pcflbID'),'/probes/tcp80')]",
    "pcflbProbeID443": "[concat(variables('pcflbID'),'/probes/tcp443')]",
    "diegosshlbName": "[concat(resourceGroup().name,'-diego-ssh-lb')]",
    "diegosshlbID": "[resourceId('Microsoft.Network/loadBalancers',variables('diegosshlbName'))]",
    "diegosshfrontEndIPConfigID": "[concat(variables('diegosshlbID'),'/frontendIPConfigurations/diegossh-fe-ip')]",
    "diegosshlbPoolID": "[concat(variables('diegosshlbID'),'/backendAddressPools/diegossh-backend-pool')]",
    "diegosshlbProbeID": "[concat(variables('diegosshlbID'),'/probes/tcp2222')]",
    "diegolbPrivateIP": "[concat(parameters('mask'),'.8.72')]",
    "tcplbName": "[concat(resourceGroup().name,'-tcp-lb')]",
    "tcplbID": "[resourceId('Microsoft.Network/loadBalancers',variables('tcplbName'))]",
    "tcpfrontEndIPConfigID": "[concat(variables('tcplbID'),'/frontendIPConfigurations/tcp-fe-ip')]",
    "tcplbPoolID": "[concat(variables('tcplbID'),'/backendAddressPools/tcp-backend-pool')]",
    "tcplbProbeID": "[concat(variables('tcplbID'),'/probes/tcp1024')]",
    "tcplbPrivateIP": "[concat(parameters('mask'),'.8.70')]",
    "mysqllbName": "[concat(resourceGroup().name,'-mysql-lb')]",
    "mysqllbID": "[resourceId('Microsoft.Network/loadBalancers',variables('mysqllbName'))]",
    "mysqlfrontEndIPConfigID": "[concat(variables('mysqllbID'),'/frontendIPConfigurations/mysql-fe-ip')]",
    "mysqllbPoolID": "[concat(variables('mysqllbID'),'/backendAddressPools/mysql-backend-pool')]",
    "mysqllbProbeID": "[concat(variables('mysqllbID'),'/probes/tcp1936')]",
    "mysqllbPrivateIP": "[concat(parameters('mask'),'.8.71')]",
    "istiolbName": "[concat(resourceGroup().name,'-istio-lb')]",
    "istiolbID": "[resourceId('Microsoft.Network/loadBalancers',variables('istiolbName'))]",
    "istiofrontEndIPConfigID": "[concat(variables('istiolbID'),'/frontendIPConfigurations/istio-fe-ip')]",
    "istiolbPoolID": "[concat(variables('istiolbID'),'/backendAddressPools/istio-backend-pool')]",
    "istiolbProbeID": "[concat(variables('istiolbID'),'/probes/http8002')]",
    "istiolbPrivateIP": "[concat(parameters('mask'),'.8.73')]",
    "diagnosticsStorageAccountName": "[concat('diag', uniquestring(resourceGroup().id))]",
    "diagnosticsStorageAccountType": "Standard_LRS",
    "OpsManPublicIPName": "[concat('OpsManPublicIP_', parameters('deploymentcolor'))]",
    "OpsManIPConfigName": "[concat('OpsManIPConfig_', parameters('deploymentcolor'))]",
    "OpsManVersion": "[replace(parameters('opsManVHD'),'.vhd', '')]",
    "ops_manager_security_group_name": "[concat(resourceGroup().name,'-ops-manager-security-group')]",
    "bosh_deployed_vms_security_group_name": "[concat(resourceGroup().name,'-bosh-deployed-vms-security-group')]",
    "pcf-lb-ip-name": "web-lb-public-ip",
    "istio-lb-ip-name": "web-lb-public-ip",
    "pcflbPrivateIP": "[concat(parameters('mask'),'.8.73')]",
    "pcflbPulicIPID": "[resourceId('Microsoft.Network/publicIPAddresses','web-lb-public-ip')]",
    "pcflbFrontendIPConfig": "[if(equals(parameters('pcflbConnection'),'public'), variables('pcflbpublicFrontendIPConfig'), variables('pcflbprivateFrontendIPConfig'))]",
    "pcflbpublicFrontendIPConfig": [
      {
        "name": "pcf-fe-ip",
        "properties": {
          "publicIPAddress": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses','web-lb-public-ip')]"
          }
        }
      }
    ],
    "pcflbprivateFrontendIPConfig": [
      {
        "name": "pcf-fe-ip",
        "properties": {
          "subnet": {
            "id": "[variables('internallb_subnetID')]"
          },
          "privateIPAddress": "[variables('pcflbPrivateIP')]",
          "privateIPAllocationMethod": "Static"
        }
      }
    ],
  "istiolbPrivateIP": "[concat(parameters('mask'),'.8.73')]",
  "istiolbPulicIPID": "[resourceId('Microsoft.Network/publicIPAddresses','istio-lb-public-ip')]",
  "istiolbFrontendIPConfig": "[if(equals(parameters('pcflbConnection'),'public'), variables('istiolbpublicFrontendIPConfig'), variables('istiolbprivateFrontendIPConfig'))]",
  "istiolbpublicFrontendIPConfig": [
    {
      "name": "istio-fe-ip",
      "properties": {
        "publicIPAddress": {
          "id": "[resourceId('Microsoft.Network/publicIPAddresses','istio-lb-public-ip')]"
        }
      }
    }
  ],
  "istiolbprivateFrontendIPConfig": [
    {
      "name": "istio-fe-ip",
      "properties": {
        "subnet": {
          "id": "[variables('internallb_subnetID')]"
        },
        "privateIPAddress": "[variables('istiolbPrivateIP')]",
        "privateIPAllocationMethod": "Static"
      }
    }
  ]
},
  "resources": [
    {
      "type": "Microsoft.Compute/images",
      "apiVersion": "2017-03-30",
      "name": "[variables('OpsManVersion')]",
      "location": "[parameters('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "properties": {
        "storageProfile": {
          "osDisk": {
            "osType": "Linux",
            "osState": "Generalized",
            "blobUri": "[parameters('OpsManImageURI')]",
            "storageAccountType": "Standard_LRS",
            "caching": "ReadWrite",
            "diskSizeGB": 127
          }
        }
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('mysqlStorageAccountName')]",
      "apiVersion": "2017-10-01",
      "location": "[variables('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('boshStorageAccountName')]",
      "apiVersion": "2017-10-01",
      "location": "[variables('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "condition": "[equals(parameters('usemanageddisks'),'no')]",
      "name": "[concat(variables('boshExtraStorageAccountName'), '1')]",
      "apiVersion": "2017-10-01",
      "location": "[variables('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "condition": "[equals(parameters('usemanageddisks'),'no')]",
      "name": "[concat(variables('boshExtraStorageAccountName'), '2')]",
      "apiVersion": "2017-10-01",
      "location": "[variables('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "condition": "[equals(parameters('usemanageddisks'),'no')]",
      "name": "[concat(variables('boshExtraStorageAccountName'), '3')]",
      "apiVersion": "2017-10-01",
      "location": "[variables('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "condition": "[equals(parameters('usemanageddisks'),'no')]",
      "name": "[concat(variables('boshExtraStorageAccountName'), '4')]",
      "apiVersion": "2017-10-01",
      "location": "[variables('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "condition": "[equals(parameters('usemanageddisks'),'no')]",
      "name": "[concat(variables('boshExtraStorageAccountName'), '5')]",
      "apiVersion": "2017-10-01",
      "location": "[variables('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "name": "[variables('diagnosticsStorageAccountName')]",
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2017-10-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "sku": {
        "name": "[variables('diagnosticsStorageAccountType')]"
      },
      "kind": "Storage",
      "properties": {}
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('OpsManPublicIPName')]",
      "location": "[variables('location')]",
      "tags": {
        "deployment": "[parameters('deploymentcolor')]",
        "provisioner": "pcf_opsman_template"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
      "type": "Microsoft.Network/dnszones",
      "condition": "[equals(parameters('Environment'),'AzureStack')]",
      "name": "[parameters('dnsZoneName')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "apiVersion": "2016-04-01",
      "location": "global",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/dnszones/A",
      "name": "[concat(parameters('dnsZoneName'),'/', parameters('opsManFQDNPrefix'))]",
      "apiVersion": "2016-04-01",
      "properties": {
        "TTL": 60,
        "ARecords": [
          {
            "ipv4Address": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('OpsManPublicIPName'))).IpAddress]"
          }
        ],
        "targetResource": {}
      },
      "dependsOn": [
        "[parameters('dnsZoneName')]",
        "[concat('Microsoft.Network/publicIPAddresses/',variables('OpsManPublicIPName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/dnszones/A",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "name": "[concat(parameters('dnsZoneName'), '/*.sys')]",
      "apiVersion": "2016-04-01",
      "location": "[variables('location')]",
      "dependsOn": [
        "[parameters('dnsZoneName')]"
      ],
      "properties": {
        "TTL": 3600,
        "ARecords": [
          {
            "ipv4Address": "[if(equals(parameters('pcflbConnection'),'public'),reference('Microsoft.Network/publicIPAddresses/web-lb-public-ip').IpAddress,variables('pcflbPrivateIP'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/dnszones/A",
      "name": "[concat(parameters('dnsZoneName'), '/*.apps')]",
      "apiVersion": "2016-04-01",
      "location": "[variables('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "dependsOn": [
        "[parameters('dnsZoneName')]"
      ],
      "properties": {
        "TTL": 3600,
        "ARecords": [
          {
            "ipv4Address": "[if(equals(parameters('pcflbConnection'),'public'),reference('Microsoft.Network/publicIPAddresses/web-lb-public-ip').IpAddress,variables('pcflbPrivateIP'))]"
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/dnszones/A",
      "name": "[concat(parameters('dnsZoneName'), '/*.mesh.apps')]",
      "apiVersion": "2016-04-01",
      "location": "[variables('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "dependsOn": [
        "[parameters('dnsZoneName')]"
      ],
      "properties": {
        "TTL": 3600,
        "ARecords": [
          {
            "ipv4Address": "[if(equals(parameters('pcflbConnection'),'public'),reference('Microsoft.Network/publicIPAddresses/web-lb-public-ip').IpAddress,variables('pcflbPrivateIP'))]"
          }
        ]
      }
    },
    {
      "apiVersion": "2017-10-01",
      "condition": "[equals(parameters('pcflbConnection'),'public')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('pcf-lb-ip-name')]",
      "location": "[variables('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },

    {
      "apiVersion": "2017-10-01",
      "condition": "[equals(parameters('pcflbConnection'),'public')]",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('istio-lb-ip-name')]",
      "location": "[variables('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },


    {
      "name": "[variables('bosh_deployed_vms_security_group_name')]",
      "apiVersion": "2017-10-01",
      "location": "[parameters('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "type": "Microsoft.Network/networkSecurityGroups",
      "properties": {
        "securityRules": [
          {
            "name": "bosh-director",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "25555",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 202,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "diego-ssh",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "2222",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 209,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "mysql",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "3306",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 207,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "dns",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "53",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 203,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "https",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 205,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "loggregator",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "4443",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 206,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "tcp",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "1024-1173",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 210,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "mysql-healthcheck",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "1936",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 208,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "ssh",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "http",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 204,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "internal-anything",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 100,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "bosh-agent",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "6868",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 201,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInBound",
            "properties": {
              "description": "Allow inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowAzureLoadBalancerInBound",
            "properties": {
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllInBound",
            "properties": {
              "description": "Deny all inbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "properties": {
              "description": "Allow outbound traffic from all VMs to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "properties": {
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "properties": {
              "description": "Deny all outbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "name": "[variables('ops_manager_security_group_name')]",
      "apiVersion": "2017-10-01",
      "location": "[parameters('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "type": "Microsoft.Network/networkSecurityGroups",
      "properties": {
        "securityRules": [
          {
            "name": "https",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 205,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "ssh",
            "properties": {
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "http",
            "properties": {
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "Internet",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 204,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ],
        "defaultSecurityRules": [
          {
            "name": "AllowVnetInBound",
            "properties": {
              "description": "Allow inbound traffic from all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowAzureLoadBalancerInBound",
            "properties": {
              "description": "Allow inbound traffic from azure load balancer",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "AzureLoadBalancer",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 65001,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllInBound",
            "properties": {
              "description": "Deny all inbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Inbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowVnetOutBound",
            "properties": {
              "description": "Allow outbound traffic from all VMs to all VMs in VNET",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "VirtualNetwork",
              "destinationAddressPrefix": "VirtualNetwork",
              "access": "Allow",
              "priority": 65000,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "AllowInternetOutBound",
            "properties": {
              "description": "Allow outbound traffic from all VMs to Internet",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "Internet",
              "access": "Allow",
              "priority": 65001,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          },
          {
            "name": "DenyAllOutBound",
            "properties": {
              "description": "Deny all outbound traffic",
              "protocol": "*",
              "sourcePortRange": "*",
              "destinationPortRange": "*",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Deny",
              "priority": 65500,
              "direction": "Outbound",
              "sourcePortRanges": [],
              "destinationPortRanges": [],
              "sourceAddressPrefixes": [],
              "destinationAddressPrefixes": []
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "dependsOn": [],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressSpace')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('infrastructure_subnet_name')]",
            "properties": {
              "addressPrefix": "[variables('infrastructureaddressPrefix')]"
            }
          },
          {
            "name": "[variables('internallb_subnet_name')]",
            "properties": {
              "addressPrefix": "[variables('internallbaddressPrefix')]"
            }
          },
          {
            "name": "[variables('services_subnet_name')]",
            "properties": {
              "addressPrefix": "[variables('servicesaddressPrefix')]"
            }
          },
          {
            "name": "[variables('pas_subnet_name')]",
            "properties": {
              "addressPrefix": "[variables('pasaddressPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-10-01",
      "name": "[variables('pcflbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "dependsOn": [
        "[if(equals(parameters('pcflbConnection'),'public'), variables('pcflbPulicIPID'),resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName')))]"
      ],
      "properties": {
        "frontendIPConfigurations": "[variables('pcflbFrontendIPConfig')]",
        "backendAddressPools": [
          {
            "name": "pcf-backend-pool"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "web-https-rule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('pcffrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('pcflbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('pcflbProbeID443')]"
              }
            }
          },
          {
            "name": "web-http-rule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('pcffrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('pcflbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('pcflbProbeID80')]"
              }
            }
          },
          {
            "name": "web-ntp-rule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('pcffrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('pcflbPoolID')]"
              },
              "protocol": "Udp",
              "frontendPort": 123,
              "backendPort": 123,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4
            }
          }
        ],
        "probes": [
          {
            "name": "tcp80",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          },
          {
            "name": "tcp443",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-10-01",
      "name": "[variables('tcplbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "tcp-fe-ip",
            "properties": {
              "subnet": {
                "id": "[variables('internallb_subnetID')]"
              },
              "privateIPAddress": "[variables('tcplbPrivateIP')]",
              "privateIPAllocationMethod": "Static"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "tcp-backend-pool"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "tcp-rule-1024",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('tcpfrontEndIPConfigID')]"
              },
              "frontendPort": 1024,
              "backendPort": 1024,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "disableOutboundSnat": false,
              "backendAddressPool": {
                "id": "[variables('tcplbPoolID')]"
              },
              "probe": {
                "id": "[variables('tcplbProbeID')]"
              }
            }
          },
          {
            "name": "tcp-ntp-rule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('tcpfrontEndIPConfigID')]"
              },
              "frontendPort": 123,
              "backendPort": 123,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Udp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "disableOutboundSnat": false,
              "backendAddressPool": {
                "id": "[variables('tcplbPoolID')]"
              }
            }
          },
          {
            "name": "tcp-rule-1027",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('tcpfrontEndIPConfigID')]"
              },
              "frontendPort": 1027,
              "backendPort": 1027,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "disableOutboundSnat": false,
              "backendAddressPool": {
                "id": "[variables('tcplbPoolID')]"
              },
              "probe": {
                "id": "[variables('tcplbProbeID')]"
              }
            }
          },
          {
            "name": "tcp-rule-1028",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('tcpfrontEndIPConfigID')]"
              },
              "frontendPort": 1028,
              "backendPort": 1028,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "disableOutboundSnat": false,
              "backendAddressPool": {
                "id": "[variables('tcplbPoolID')]"
              },
              "probe": {
                "id": "[variables('tcplbProbeID')]"
              }
            }
          },
          {
            "name": "tcp-rule-1025",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('tcpfrontEndIPConfigID')]"
              },
              "frontendPort": 1025,
              "backendPort": 1025,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "disableOutboundSnat": false,
              "backendAddressPool": {
                "id": "[variables('tcplbPoolID')]"
              },
              "probe": {
                "id": "[variables('tcplbProbeID')]"
              }
            }
          },
          {
            "name": "tcp-rule-1026",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('tcpfrontEndIPConfigID')]"
              },
              "frontendPort": 1026,
              "backendPort": 1026,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Tcp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "disableOutboundSnat": false,
              "backendAddressPool": {
                "id": "[variables('tcplbPoolID')]"
              },
              "probe": {
                "id": "[variables('tcplbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcp1024",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 15,
              "numberOfProbes": 2
            }
          }
        ],
        "inboundNatRules": [],
        "outboundRules": [],
        "inboundNatPools": []
      }
    },
    {
      "apiVersion": "2017-10-01",
      "name": "[variables('diegosshlbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "diegossh-fe-ip",
            "properties": {
              "subnet": {
                "id": "[variables('internallb_subnetID')]"
              },
              "privateIPAddress": "[variables('diegolbPrivateIP')]",
              "privateIPAllocationMethod": "Static"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "diegossh-backend-pool"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "diego-ssh-ntp-rule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('diegosshfrontEndIPConfigID')]"
              },
              "frontendPort": 123,
              "backendPort": 123,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "protocol": "Udp",
              "enableTcpReset": false,
              "loadDistribution": "Default",
              "disableOutboundSnat": false,
              "backendAddressPool": {
                "id": "[variables('diegosshlbPoolID')]"
              }
            }
          },
          {
            "name": "diego-ssh-rule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('diegosshfrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('diegosshlbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 2222,
              "backendPort": 2222,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('diegosshlbProbeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "tcp2222",
            "properties": {
              "protocol": "Tcp",
              "port": 2222,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "name": "[variables('mysqllbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]"      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "mysql-fe-ip",
            "properties": {
              "subnet": {
                "id": "[variables('internallb_subnetID')]"
              },
              "privateIPAddress": "[variables('mysqllbPrivateIP')]",
              "privateIPAllocationMethod": "Static"
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "mysql-backend-pool"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "mysql-rule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('mysqlfrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('mysqllbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 3306,
              "backendPort": 3306,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('mysqllbProbeID')]"
              }
            }
          },
          {
            "name": "mysql-ntp",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('mysqlfrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('mysqllbPoolID')]"
              },
              "protocol": "Udp",
              "frontendPort": 123,
              "backendPort": 123,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4
            }
          }
        ],
        "probes": [
          {
            "name": "tcp1936",
            "properties": {
              "protocol": "Tcp",
              "port": 1936,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    },


    {
      "apiVersion": "2017-10-01",
      "name": "[variables('istiolbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "location": "[resourceGroup().location]",
      "tags": {
        "provisioner": "pcf_opsman_template"
      },
      "dependsOn": [
        "[if(equals(parameters('pcflbConnection'),'public'), variables('istiolbPulicIPID'),resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName')))]"
      ],
      "properties": {
        "frontendIPConfigurations": "[variables('istiolbFrontendIPConfig')]",
        "backendAddressPools": [
          {
            "name": "istio-backend-pool"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "istio-https-rule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('istiofrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('istiolbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 443,
              "backendPort": 443,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('istiolbProbeID')]"
              }
            }
          },
          {
            "name": "istio-http-rule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('istiofrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('istiolbPoolID')]"
              },
              "protocol": "Tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('istiolbProbeID')]"
              }
            }
          },
          {
          "name": "istio-8002-rule",
          "properties": {
            "frontendIPConfiguration": {
              "id": "[variables('istiofrontEndIPConfigID')]"
            },
            "backendAddressPool": {
              "id": "[variables('istiolbPoolID')]"
            },
            "protocol": "Tcp",
            "frontendPort": 8002,
            "backendPort": 8002,
            "enableFloatingIP": false,
            "idleTimeoutInMinutes": 4,
            "probe": {
              "id": "[variables('istiolbProbeID')]"
            }
          }
        },
          {
            "name": "istio-http-rule",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('istiofrontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('istiolbPoolID')]"
              },
              "protocol": "tcp",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4
            }
          }
        ],
        "probes": [
          {
            "name": "http8002",
            "properties": {
              "protocol": "Tcp",
              "port": 80,
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "path": "/healthcheck"
            }
          },
          {
            "name": "tcp443",
            "properties": {
              "protocol": "Tcp",
              "port": 443,
              "intervalInSeconds": 5,
              "numberOfProbes": 2
            }
          }
        ]
      }
    }

    ,
    {
      "apiVersion": "2017-10-01",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('opsManNicName')]",
      "location": "[variables('location')]",
      "tags": {
        "deployment": "[parameters('deploymentcolor')]",
        "provisioner": "pcf_opsman_template"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', variables('ops_manager_security_group_name'))]",
        "[concat('Microsoft.Network/publicIPAddresses/',variables('OpsManPublicIPName'))]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups',  variables('ops_manager_security_group_name'))]"
        },
        "ipConfigurations": [
          {
            "name": "[variables('OpsManIPConfigName')]",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "[variables('opsManPrivateIPAddress')]",
              "publicIPAddress": {
                "id": "[resourceID('Microsoft.Network/publicIPAddresses/',variables('OpsManPublicIPName'))]"
              },
              "subnet": {
                "id": "[reference(concat('Microsoft.Network/virtualNetworks/',variables('virtualNetworkName'))).subnets[0].id]"
              },
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('ops_manager_security_group_name'))]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('opsManVMName')]",
      "location": "[variables('location')]",
      "tags": {
        "deployment": "[parameters('deploymentcolor')]",
        "opsmanversion": "[variables('OpsManVersion')]",
        "provisioner": "pcf_opsman_template"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/',variables('opsManNicName'))]",
        "[concat('Microsoft.Compute/images/', variables('OpsManVersion'))]",
        "[concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('opsManVMName')]",
          "adminUsername": "[parameters('adminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
              "publicKeys": [
                {
                  "path": "[variables('sshKeyPath')]",
                  "keyData": "[parameters('sshKeyData')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "id": "[resourceId('Microsoft.Compute/images', variables('OpsManVersion'))]"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('opsManNicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('diagnosticsStorageAccountName')),providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob)]"
          }
        }
      }
    }
  ],
  "outputs": {
    "Opsman URL": {
      "value": "[concat('https://',parameters('opsManFQDNPrefix'),'.', parameters('dnsZoneName'))]",
      "type": "string"
    },
    "Bosh Storageaccount": {
      "value": "[parameters('boshStorageAccountName')]",
      "type": "string"
    },
    "Extra Storageaccount Prefix": {
      "type": "string",
      "value": "[if(equals(parameters('useManagedDisks'), 'no'), variables('boshExtraStorageAccountName'), 'None, using ManagedDisks for extra Storage')]"
    }
  }
}